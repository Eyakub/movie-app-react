{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/NotFound/NotFound.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","image","title","text","SearchBar","state","timeout","doSearch","event","setState","value","target","clearTimeout","setTimeout","callback","icon","name","size","type","placeholder","onChange","this","Component","FourColGrid","console","log","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchitems","loadMoreItems","fetch","then","result","json","results","page","total_pages","localStorage","setItem","JSON","stringify","catch","error","getItem","parse","backdrop_path","original_title","overview","poster_path","id","NotFound","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","fetchItems","status_code","match","params","crew","filter","member","job","cast","location","moviename","runtime","App","basename","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fa40481.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"rmdb-header\">\r\n      <div className=\"rmdb-header-content\">\r\n        <Link to=\"/\">\r\n          <img\r\n            src=\"./images/reactMovie_logo.png\"\r\n            alt=\"movie logo\"\r\n            className=\"rmdb-logo\"\r\n          />\r\n        </Link>\r\n        <img\r\n          src=\"./images/tmdb_logo.png\"\r\n          alt=\"tmdb-logo\"\r\n          className=\"rmdb-tmdb-logo\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// Configuration for TMDB\r\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\r\n// const API_KEY = '945ce59131bb5d41a8f557bff9b52e21';\r\n\r\n\r\n// 019e8f375549e0bbd4a4191862ebc88f\r\n\r\n// Images\r\n// An image URL looks like this example:\r\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\r\n\r\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\r\n\r\n//Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280'\r\n\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w500'\r\n\r\nexport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE\r\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n  return (\r\n    <div className=\"rmdb-heroimage\" \r\n      style={{\r\n        background:\r\n        `linear-gradient(to bottom, rgba(0,0,0,0)\r\n        39%, rgba(0,0,0,0)\r\n        41%, rgba(0,0,0,0.65)\r\n        100%),\r\n        url('${props.image}'), #1c1c1c`\r\n      }}\r\n    >\r\n      <div className=\"rmdb-heroimage-content\">\r\n        <div className=\"rmdb-heroimage-text\">\r\n          <h1>{props.title}</h1>\r\n          <p>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeroImage;","import React, {Component} from 'react';\r\n// import FontAwesome from 'react-fontawesome';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component{\r\n  state = {\r\n\r\n  }\r\n\r\n  timeout = null;\r\n\r\n  doSearch = (event) => {\r\n    this.setState({ value: event.target.value });\r\n    // clear timeout everytime we search\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout(() => {\r\n      this.props.callback(this.state.value)\r\n    }, 500);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"rmdb-searchbar\">\r\n        <div className=\"rmdb-searchbar-content\">\r\n          <FontAwesomeIcon icon=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n          <input type=\"text\"\r\n            className=\"rmdb-searchbar-input\"\r\n            placeholder=\"Search\"\r\n            onChange={this.doSearch}\r\n            value={this.state.value}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n  console.log(props)\r\n  const renderElements = () => {\r\n    const gridElements = props.children.map((element, i) => {\r\n      return (\r\n        <div key={i} className=\"rmdb-grid-element\">\r\n          {element}\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return gridElements;\r\n  }\r\n\r\n  return (\r\n    <div className=\"rmdb-grid\">\r\n      { props.header && !props.loading ? <h1>{ props.header }</h1> : null }\r\n      <div className=\"rmdb-grid-content\">\r\n        {renderElements()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// proptypes helps us to find bugs on passing variable\r\nFourColGrid.propTypes = {\r\n  header: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n}\r\n\r\nexport default FourColGrid","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./MovieThumb.css\";\r\n\r\nconst MovieThumb = props => {\r\n  return (\r\n    <div className=\"rmdb-moviethumb\">\r\n      {props.clickable ? (\r\n        <Link\r\n          to={{\r\n            pathname: `/${props.movieId}`,\r\n            movieName: `${props.movieName}`\r\n          }}\r\n        >\r\n          (\r\n          <img src={props.image} alt=\"moviethumb\" />)\r\n        </Link>\r\n      ) : (\r\n        <img src={props.image} alt=\"moviethumb\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  movieName: PropTypes.string\r\n}\r\n\r\nexport default MovieThumb;\r\n","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n  return (\r\n    <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n      <p>{ props.text }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadMoreBtn","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = (props) => {\r\n  return (\r\n    <div className=\"loader\">\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner","import React, { Component } from \"react\";\r\nimport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  POSTER_SIZE,\r\n  BACKGROUND_SIZE,\r\n  BACKDROP_SIZE\r\n} from \"../../config\";\r\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\r\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\r\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    // checking if local storage contain state value or not\r\n    if (localStorage.getItem('HomeState')) {\r\n      const state = JSON.parse(localStorage.getItem('HomeState'));\r\n      this.setState( { ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n      this.fetchitems(endpoint);\r\n    }\r\n  }\r\n\r\n  searchItems = searchTerm => {\r\n    console.log(searchTerm);\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm\r\n    });\r\n\r\n    if (searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n    this.fetchitems(endpoint);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    if (this.state.searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\r\n        .state.currentPage + 1}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${\r\n        this.state.searchTerm\r\n      }&page=${this.state.currentPage + 1}`;\r\n    }\r\n    this.fetchitems(endpoint);\r\n  };\r\n\r\n  fetchitems = endpoint => {\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        this.setState({\r\n          movies: [...this.state.movies, ...result.results],\r\n          heroImage: this.state.heroImage || result.results[0],\r\n          loading: false,\r\n          currentPage: result.page,\r\n          totalPages: result.total_pages\r\n        }, () => {\r\n          // doing this for setting STATE on local storage\r\n          // check from chrome console > application\r\n          if (this.state.searchTerm === ''){\r\n            // if we don't want to store search result\r\n            localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n          }\r\n        });\r\n      })\r\n      .catch(error => console.error(\"error:\", error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-home\">\r\n        {/* using turnary operator */}\r\n        {this.state.heroImage ? (\r\n          <div>\r\n            <HeroImage\r\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}/${this.state.heroImage.backdrop_path}`}\r\n              title={this.state.heroImage.original_title}\r\n              text={this.state.heroImage.overview}\r\n            />\r\n            <SearchBar callback={this.searchItems} />\r\n          </div>\r\n        ) : null}\r\n        <div className=\"rmdb-home-grid\">\r\n          <FourColGrid header={ this.state.searchTerm ? 'Search Result' : 'Popular Movies' }\r\n          loading={ this.state.loading }\r\n          >\r\n            {this.state.movies.map((element, i) => {\r\n              return <MovieThumb\r\n                        key={i}\r\n                        clickable={true}\r\n                        image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${element.poster_path}` : '../../../public/images/no_image.jpg' }\r\n                        movieId={element.id}\r\n                        movieName={element.original_title}\r\n                      />\r\n            })}\r\n          </FourColGrid>\r\n          { this.state.loading ? <Spinner></Spinner> : null }\r\n          {(this.state.currentPage <= this.state.totalPages && !this.loading) ? \r\n              <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} /> \r\n              : null } \r\n        </div>\r\n        \r\n        <LoadMoreBtn />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Whoooops, This page doesn't exist</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = props => {\r\n  console.log(props.movie)\r\n  return (\r\n    <div className=\"rmdb-navigation\">\r\n      <div className=\"rmdb-navigation-content\">\r\n        <Link to=\"/\">\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>/</p>\r\n        <p>{props.movie}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = (props) => {\r\n  return (\r\n    <div className=\"rmdb-movieinfo\"\r\n      style={{ \r\n        background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\r\n      }}\r\n    >\r\n      <div className=\"rmdb-movieinfo-content\">\r\n        <div className=\"rmdb-movieinfo-thumb\">\r\n          <MovieThumb\r\n            image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\r\n            clickable={false}\r\n          />\r\n        </div>\r\n        <div className=\"rmdb-movieinfo-text\">\r\n          <h1>{props.movie.title}</h1>\r\n          <h3>Plot</h3>\r\n          <p>{props.movie.overview}</p>\r\n          <h3>IMDB RATING</h3>\r\n          <div className=\"rmdb-rating\">\r\n            <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n          </div>\r\n          {props.directors.length > 1 ? <h3>Directors</h3> : <h3>Director</h3>}\r\n          {props.directors.map((element, i) => {\r\n            return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n          })}\r\n        </div>\r\n        <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\r\nexport const calcTime = (time) => {\r\n    const hours = Math.floor(time / 60);\r\n    const mins = time % 60;\r\n    return `${hours}h ${mins}m`;\r\n  }\r\n  // Convert a number to money formatting\r\n  export const convertMoney = (money) => {\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n    });\r\n    return formatter.format(money);\r\n  }","import React from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport { calcTime, convertMoney } from \"../../../helpers.js\";\r\nimport \"./MovieInfoBar.css\";\r\n\r\nconst MovieInfoBar = props => {\r\n  return (\r\n    <div className=\"rmdb-movieinfobar\">\r\n      <div className=\"rmdb-movieinfobar-content\">\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Running time: {calcTime(props.time)}\r\n          </span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Budget: {convertMoney(props.budget)}\r\n          </span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Revenue: {convertMoney(props.revenue)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfoBar;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL } from \"../../../config\";\r\nimport \"./Actor.css\";\r\n\r\nconst Actor = props => {\r\n  const POSTER_SIZE = \"w154\";\r\n\r\n  return (\r\n    <div className=\"rmdb-actor\">\r\n      <img\r\n        src={\r\n          props.actor.profile_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}`\r\n            : \"./images/no_image.jpg\"\r\n        }\r\n        alt=\"actorthumb\"\r\n      />\r\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n      <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actor;\r\n","import React, { Component } from \"react\";\r\nimport { API_URL, API_KEY } from \"../../config\";\r\nimport Navigation from \"../elements/Navigation/Navigation\";\r\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\r\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\nimport Actor from \"../elements/Actor/Actor\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport \"./Movie.css\";\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(localStorage.getItem(`${this.props.match.params.movieId}`)){\r\n      const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      // first fetch the movie ...\r\n      const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n    \r\n  }\r\n\r\n  fetchItems = endpoint => {\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        if (result.status_code) {\r\n          this.setState({ loading: false });\r\n        } else {\r\n          this.setState({ movie: result }, () => {\r\n            // ... then fetch actors in the setState callback function\r\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n            fetch(endpoint)\r\n              .then(result => result.json())\r\n              .then(result => {\r\n                const directors = result.crew.filter(\r\n                  member => member.job === \"Director\"\r\n                );\r\n\r\n                this.setState({\r\n                  actors: result.cast,\r\n                  directors,\r\n                  loading: false\r\n                }, () => {\r\n                  // storing the specific movie data to the local storage where keyname is {movieId}\r\n                  localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state));\r\n                });\r\n              });\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.error(\"error\", error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        {this.state.movie ? (\r\n          <div>\r\n            <Navigation movie={this.props.location.moviename} />\r\n            <MovieInfo\r\n              movie={this.state.movie}\r\n              directors={this.state.directors}\r\n            />\r\n            <MovieInfoBar\r\n              time={this.state.movie.runtime}\r\n              budget={this.state.movie.budget}\r\n              revenue={this.state.movie.revenue}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {this.state.actors ? (\r\n          <div className=\"rmdb-movie-grid\">\r\n            <FourColGrid header={\"Actors\"}>\r\n              {this.state.actors.map((element, i) => {\r\n                return <Actor key={i} actor={element} />;\r\n              })}\r\n            </FourColGrid>\r\n          </div>\r\n        ) : null}\r\n        {!this.state.actors && !this.state.loading ? (\r\n          <h1>No Movie Found!</h1>\r\n        ) : null}\r\n        {this.state.loading ? <Spinner></Spinner> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport Header from \"../elements/Header/Header\";\r\nimport Home from \"../Home/Home\";\r\nimport NotFound from '../elements/NotFound/NotFound';\r\nimport Movie from '../Movie/Movie';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter basename=\"react_rmdb\">\r\n        <React.Fragment>\r\n            <Header></Header>\r\n            <Switch>\r\n                <Route path=\"/\" component={Home} exact />\r\n                <Route path=\"/:movieId\" component={Movie} exact />\r\n                <Route component={ NotFound } />\r\n            </Switch>\r\n        </React.Fragment>\r\n    </BrowserRouter>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}